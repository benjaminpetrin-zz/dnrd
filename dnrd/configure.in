dnl Process this file with autoconf to produce a configure script.
AC_INIT(dnrd, [2.20.3], [dnrd-user@lists.sourceforge.net])
AC_CANONICAL_SYSTEM

AM_CONFIG_HEADER(src/config.h)
AM_INIT_AUTOMAKE(dnrd,2.20.3)

dnl Fix "prefix" variable if it hasn't been specified...
if test "$prefix" = "NONE"; then
	prefix="/usr/local"
fi

dnl Fix "sysconfdir" variable if it hasn't been specified...
if test "$sysconfdir" = "\${prefix}/etc"; then
	if test "$prefix" = "/"; then
		sysconfdir="/etc"
	else
		sysconfdir="$prefix/etc"
	fi
fi

dnl Setup default root...
DNRD_ROOT="$sysconfdir/dnrd"
AC_DEFINE_UNQUOTED(DNRD_ROOT, "${sysconfdir}/dnrd", [Default DNRD root])
AC_SUBST(DNRD_ROOT)


dnl Checks for programs.
AC_PROG_CC
AC_ISC_POSIX

dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS(sys/time.h syslog.h unistd.h)

dnl Check for pthread
AC_CHECK_HEADER(pthread.h)
   case $host_os in
     dnl BSD/OS and NetBSD require no special libraries or flags
     netbsd*|bsdi*) ;;
     freebsd*) THREAD_CFLAGS="${PTHREAD_CFLAGS}" THREAD_LIBS="${PTHREAD_LIBS}"
	       ;;
     linux*|openbsd*) THREAD_LIBS="-lpthread" ;;	
dnl other operating systems might fail because they have pthread.h but need
dnl special libs we don't know about yet.
   esac
AC_SUBST(THREAD_LIBS)
AC_SUBST(THREAD_CFLAGS)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_UID_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME

AC_DEFINE([_GNU_SOURCE], [], [Enable GNU extensions])


dnl Checks for library functions.
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(pselect select socket strdup strerror strtoul strnlen usleep)


AC_ARG_ENABLE(debug,
 [  --enable-debug          enable debugging],
 [case "${enableval}" in
    yes) debug="true" ;;
    no) debug="false" ;;
    *) AC_MSG_ERROR(bad value ${enableval} for -with-debug) ;;
  esac])

if test "x$debug" = "xtrue"; then
AC_DEFINE([DEBUG], [], [Enable debugging])
echo "Debugging enabled"
fi 


AC_ARG_ENABLE(tcp,
 [  --enable-tcp            enable TCP support],
 [case "${enableval}" in
    yes) tcp_support="true" ;;
    no) tcp_support="false" ;;
    *) AC_MSG_ERROR(bad value ${enableval} for -with-tcp) ;;
  esac])

if test "x$tcp_support" = "xtrue"; then
AC_DEFINE([ENABLE_TCP], [], [Enable TCP support])
echo "TCP support enabled"
fi 

AC_ARG_ENABLE(master,
 [  --disable-master        disable master file support],
 [case "${enableval}" in
    yes) master_support="true" ;;
    no) master_support="false" ;;
    *) AC_MSG_ERROR(bad value ${enableval} for -with-master) ;;
  esac])

if test "x$master_support" = "xfalse"; then
AC_DEFINE([EXCLUDE_MASTER], [], [Disable master support])
echo "MASTER disabled"
fi 

AC_ARG_ENABLE(pid-file,
 [  --disable-pid-file        disable use of PID file],
 [case "${enableval}" in
    yes) pidfile="true" ;;
    no) pidfile="false" ;;
    *) AC_MSG_ERROR(bad value ${enableval} for -with-pid-file) ;;
  esac])

if test "x$pidfile" = "xfalse"; then
  echo "pid file disabled"
else
  AC_DEFINE([ENABLE_PIDFILE], [], [Enable pidfile])
fi 
  


AC_ARG_ENABLE(pthreads,
 [  --enable-pthreads       enable posix threads (Buggy!!!)],
 [case "${enableval}" in
    yes) pthreads_support="true" ;;
    no) ptreads_support="false" ;;
    *) AC_MSG_ERROR(bad value ${enableval} for -with-pthreads) ;;
  esac])

if test "x$pthreads_support" = "xtrue"; then
AC_DEFINE([ENABLE_PTHREADS], [], [Enable pthreads support]) 

echo "Warning: Pthreads enabled! This code is buggy and should only be used
for testing purposes."  
fi


AC_ARG_ENABLE(random-src,
 [  --enable-random-src      enable random source port],
 [case "${enableval}" in
    yes) random_src="true" ;;
    no) random_src="false" ;;
    *) AC_MSG_ERROR(bad value ${enableval} for -with-tcp) ;;
  esac])

if test "x$random_src" = "xfalse"; then
   echo "Random source ports disabled"
else
   AC_DEFINE([RANDOM_SRC], [], [Enable random source ports])
   echo "Random source ports enabled"
fi 


AC_CONFIG_FILES([Makefile
		src/Makefile
		doc/Makefile])

AC_OUTPUT([doc/dnrd.8
	doc/README-master
	doc/README-cache])
